Что есть на данный момент:

1/2/3байтовые инструкции, включая инструкции виртуализации для Intel и SSE41/42.

Чего нет:
FPU, подгрупп инструкций 0F 00/0F 01, AMD 3DNow!, AMD Virtualization (будет добавлено позже).

Пример использования можно найти в файле test.c. Документации пока тоже нет :). В принципе, все относительно просто:

unsigned int disassemble(uint8_t *offset, struct INSTRUCTION *instr, struct PARAMS *params);

offset -- адрес инструкции, которую необходимо дизассемблировать.
instr  -- адрес структуры, в которую будет сохранен результат дизассемблирования.
params -- адрес структуры с входными/выходными параметрами.

struct PARAMS
{
    uint8_t *sf_prefixes; //Адрес массива, куда будут сохранены занчения всех избыточных префиксов.
                          // Массив должен быть не менее чем MAX_INSTRUCTION_LEN байт.
                          // Если адрес массива равен NULL, избыточные префиксы не сохраняются.
    
    int sf_prefixes_len;  //Количество избыточных префиксов в массиве sf_prefixes.
    uint8_t arch;         //Целевая архитектура.
                          //ARCH_COMMON -- инструкции, присутствующие _и_ в наборах Intel _и_ в наборах AMD.
                          //ARCH_INTEL  -- набор инструкций Intel.
                          //ARCH_AMD    -- набор инструкций AMD.
    uint8_t mode;         //Режим дизассемблирования. DISASSEMBLE_MODE_16/DISASSEMBLE_MODE_32/DISASSEMBLE_MODE_64.
};

Вывод инструкции:

int dump(struct INSTRUCTION *instr, char *buff, int bufflen, int options);
int dump_dbg(struct INSTRUCTION *instr, uint8_t *sf_prefixes, char *buff, unsigned int len);

тут, в принципе, все понятно, поясню только опции:

#define OPTION_IMM_HEX   0x1 //непосредственные операнды выводятся как знаковые числа в шестнадцатеричном формате.
#define OPTION_IMM_UHEX  0x2 //непосредственные операнды выводятся как беззнаковые числа в шестнадцатеричном формате.
#define OPTION_IMM_DEC   0x4 //непосредственные операнды выводятся как знаковые числа в десятичном формате.
#define OPTION_IMM_UDEC  0x8 //непосредственные операнды выводятся как беззнаковые числа в десятичном формате.
#define OPTION_IMM_MASK  0xF

#define OPTION_DISP_HEX  0x10 //
#define OPTION_DISP_UHEX 0x20 //Все тоже самое, но касается смещения в команде.
#define OPTION_DISP_DEC  0x40 //
#define OPTION_DISP_UDEC 0x80 //
#define OPTION_DISP_MASK 0xF0 //


Известные на данный момент ошибки:
1. Неверно описана подгруппа инструкций 0F AE XX.
2. Инструкции виртуализации процессоров Intel помечены как ARCH_COMMON (должно быть ARCH_INTEL).
3. Инструкции, размер операндов которых зависит от типа операнда (регистр/память) обрабатываются некорректно (в этом месте я вырвал из головы клок волос).

Вроде бы, все.

Сообщения об ошибках, предложения и вопросы шлите на mika0x65@gmail.com К отчетам об ошибках добавляйте, пожалуйста, байты, на которых дизассемблер не отработал.
Заранее благодарю.